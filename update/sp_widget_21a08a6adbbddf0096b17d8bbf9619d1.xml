<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <client_script><![CDATA[function loginCtrl($scope, $http, $window, $location, glideUserSession, glideSystemProperties, spUtil) {

	var c = this;
	c.remember_me = c.data.forgetMeDefault;
	if (typeof c.options.show_panel == 'undefined') {
		c.options.show_panel = true;
	}

	if (!c.data.is_logged_in && c.data.multisso_enabled && c.data.default_idp) {
		c.server.get({
			action: "set_sso_destination",
			pageURI: c.data.pageURI
		}).then(function() {
			$window.location = "/login_with_sso.do?glide_sso_id=" + c.data.default_idp;
		});
	}
	

	
	c.on = function(description,topic,hospital,speaker,time,end_time,location){
		c.data.description = description;
		c.data.topic = topic;
		c.data.hospital = hospital;
		c.data.speaker = speaker;
		c.data.time = time;
		c.data.end_time = end_time;
		c.data.location = location;
    document.getElementById("overlay").style.display = "block";
}

	c.off = function(){
    document.getElementById("overlay").style.display = "none";
}
	
	c.addSession = function(ID){
		c.data.sessionID = ID;
		c.server.update();
	
	}
		
  c.removeSession = function(ID){
		c.data.sessionIDr = ID;
		c.server.update();
	
	}
	
	
	$scope.attendingThisClass = function(ID){
	var array = c.data.result;
		var result = array.indexOf(ID);
		if(result > 1)
			return false;
		return true;
	 
	}
	
	
	c.logout = function(){
		$window.location = 'https://shcdev.service-now.com/logout.do?sysparm_goto_url=/swug19';
	}	
	
	c.login = function(username, password) {
			
		var url = spUtil.getURL({sysparm_type: 'view_form.login'});
		
		// If the page isn't public then the id in the
		// url won't match the rendered page id.
		var pageId = $location.search().id || $scope.page.id;
		var isLoginPage = $scope.portal.login_page_dv == pageId;

		return $http({
			method: 'post',
			url: url,
			data: $.param({
				'sysparm_type': 'login',
				'ni.nolog.user_password': true,
				'remember_me': !!c.remember_me ? true : false,
				'user_name': username,
				'user_password': password,
				'get_redirect_url': true,
				'sysparm_goto_url': isLoginPage ? null : $location.url()
			}),
			headers: {
				'Content-Type': 'application/x-www-form-urlencoded'
			}
		}).then(function(response) {
			if (!response.data) {
				c.message = $scope.data.errorMsg;
				return;
			}

			if (response.data.status == 'success') {
				c.success = response.data.message;
				//$window.location = response.data.redirect_url;
				$window.location = '/swug19?id=swug_sessions';
			} else {
				// wrong username or password
				c.message = response.data.message;
				c.password = "";
				c.username = "";
				angular.element("#username").focus();
			}

		}, function errorCallback(response) {
			// error
			c.message = $scope.data.errorMsg;
		});
	};

	c.externalLogin = function() {
		c.server.get({
			action: "set_sso_destination",
			pageURI: c.data.pageURI
		}).then(function() {
			glideSystemProperties.set("glide.authenticate.multisso.enabled", true);

			glideUserSession.getSsoRedirectUrlForUsername(c.username)
				.then(function(url) {
					$window.location = url;
				}, function(err) {
					spUtil.addErrorMessage($scope.data.errorMsg2);
				});
		});
	}

	c.setExternalLogin = function(newVal) {
		c.externalLoginMode = newVal;
	}
	
}


]]></client_script>
        <controller_as>c</controller_as>
        <css>//GLOBAL
.global{
 
}

// COLOR BAR
.global__accent-bar{
  //position: fixed;
  display:-webkit-box;display:-ms-flexbox;
  -webkit-box-orient:horizontal;
  -webkit-box-direction:normal;
  -ms-flex-direction:row;
  flex-direction:row;
  -ms-flex-wrap:nowrap;
  flex-wrap:nowrap;
  -webkit-box-align:start;
  -ms-flex-align:start;
  align-items:flex-start;
  overflow:hidden;
  left:0;
  width:100%;
  position:absolute;
}

.global__accent-bar span{
  display:block;
  width:20%;
  height:.5rem
}
@media (min-width:600px){
  .global__accent-bar span{
    height:.9rem}}
.global__accent-bar .magenta{
  background-color:#e62565
}
.global__accent-bar .green{background-color:#8ad000}
.global__accent-bar .purple{background-color:#9a29af}
.global__accent-bar .blue{background-color:#03a9f3}
.global__accent-bar .yellow{background-color:#ffeb3c}
.global__accent-bar:first-child{display:none}
@media (min-width:1366px){
  .global__accent-bar:first-child{
    display:-webkit-box;
    display:-ms-flexbox;
    display:flex;
    left:-60%}}


//hand
.hand{
  cursor: pointer;
}



//Logo
.logo{
  float: left;
  width:300px;
  height:80px;
  position:relative;
  margin-top:30px;
  margin-bottom 40px;

}


//Navigation menu
.date{
  text-align: center;
}


.nav__container{
  position:relative;
  top:40px;
  left:0;
  width:300px;
  height: 450px;
  background-color:#fff;
  z-index:20;
  -webkit-box-shadow:0 .5rem 2.5rem .6rem rgba(0,0,0,.25);
  box-shadow:0 .5rem 2.5rem .6rem rgba(0,0,0,.25);
  -webkit-transition:all .25s ease;
  transition:all .25s ease}



.nav__options-container{
  display:block;
  position:relative;
}


.nav__menu-container{
  margin-bottom:5.8rem;
  margin-top:30px;
  padding-left:50px;
  padding-right:50px;
  padding-top:30px;
}


.nav__menu-container .nav__menu-item{
  border-top:.1rem solid #f2f2f2;
  padding:.4rem 0;
  text-transform:uppercase}


.nav__menu-container .nav__menu-link--undecorated{
      color:gray;
  text-decoration:none;
  font-weight:800;
  font-size:1.6rem}

.nav__menu-container .nav__menu-link--undecorated:hover{
  color:#000}


//main container
.mainContainer{
  float:right;
  width: 80%;
  padding-top:30px;
  margin-top: -400px;
}
@media only screen and (max-width :800px){
  .mainContainer{
    float:none;
    width: 100%;
    margin-top:20px;
  }
  }



//Sessions

.sessionContainer{
  width: 90%;
  height: auto;
  background-color:#fff; 
  margin: auto;
  margin-bottom:40px;
  border: 2px solid purple;
    border-radius: 5px;
  margin-top:15px;
  
   -webkit-box-shadow:0 .5rem 2.5rem .6rem rgba(0,0,0,.25);
  box-shadow:0 .5rem 2.5rem .6rem rgba(0,0,0,.25);
  -webkit-transition:all .25s ease;
  transition:all .25s ease
    
}


.topic{
  color: #000;
  //padding-bottom:10px;
  font-size: 22px;
}

.description{
   overflow: hidden;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  
}
 
@media screen and (max-width: 800px) {
  .hideMobile{
    visibility: hidden;
    clear: both;
    margin: 10px auto 5px 20px;
    display: none;
  }}


//POPUP
#overlay {
    position: fixed; /* Sit on top of the page content */
    display: none; /* Hidden by default */
    width: 100%; /* Full width (cover the whole page) */
    height: 100%; /* Full height (cover the whole page) */
    top: 0; 
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0,0,0,0.5); /* Black background with opacity */
    z-index: 2; /* Specify a stack order in case you're using a different order for other elements */
    cursor: pointer; /* Add a pointer on hover */
}

#text{
 position: absolute;
    top: 50%;
    left: 50%;
    font-size: 50px;
    color: #000;
    transform: translate(-40%,-40%);
    -ms-transform: translate(-40%,-40%);
    background-color:#fff;
}


.add{
cursor: pointer;
 position: relative;
  //right:0px;
background-color:#fff;
  float:right;
  top:-12px;
  
  
}

//HEADER
.wrapper{
   width:90%;
  margin: auto;
  
}
  
}
.header{
  background-color:#72246c;
  border-bottom: 5px solid #ffb81c;
  text-align:center;
  width: 90%;
  margin: auto;
   -webkit-box-shadow:0 .5rem 2.5rem .6rem rgba(0,0,0,.25);
  box-shadow:0 .5rem 2.5rem .6rem rgba(0,0,0,.25);
  -webkit-transition:all .25s ease;
  transition:all .25s ease
}
.header h1{
  font-size:36pt;
  color:#ffb81c;
}

//Adgenda table
#adgenda{
 
 -webkit-box-shadow:0 .5rem 2.5rem .6rem rgba(0,0,0,.25);
  box-shadow:0 .5rem 2.5rem .6rem rgba(0,0,0,.25);
  -webkit-transition:all .25s ease;
  transition:all .25s ease
}

#adgenda h1{
  border-bottom: 6px solid #000;
  font-size:30pt;
  padding: 40px;
  color:#000;
}

table {
    border-collapse: collapse;
    width: 100%;
  font-size:16pt;
}

 td {
    padding: 8px;
    text-align: center;
    border-bottom: 1px solid #ddd;
   color:#000;
}

//LOGIN
.set-login-type-link {
  margin-top: 10px;
  display: block;
 
}

.form-control,
label[for="username"],
label[for="password"] {
	color: black;
}

.btn {
	font-weight: 600;
  font-size: 2.0rem;
  background-color: #176AAD;
  border-color: #0B4E85;
}
.login{
  //position: relative;
  display:block;
  width: 300px;
  float: left;
  margin-top: 60px;
}

ol {
 list-style-type: decimal;
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>swug_sessions</id>
        <internal>false</internal>
        <link/>
        <name>SWUG Sessions</name>
        <option_schema/>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
	
  data.is_logged_in = gs.getSession().isLoggedIn();
	
	var ses = new x_sthc_swug_19.SessionUtil();
	
	data.sessions = [];
	data.sessions = ses.getList();
	data.attendingSessions = ses.getAttendance();
	data.result = JSON.stringify(data.attendingSessions);
	
	data.errorMsg = gs.getMessage("There was an error processing your request");
data.errorMsg2 = gs.getMessage("An error has occurred - please contact your system administrator");
data.passwordMsg = gs.getMessage("Password");
data.usernameMsg = gs.getMessage("E-mail");
	

	if(input){
		
		
		if((input.sessionID != '')&&(input.sessionID)){
			
			addSession(input.sessionID,gs.getUserID());
			data.attendingSessions = ses.getAttendance();
	    data.result = JSON.stringify(data.attendingSessions);
			input.sessionID = '';
			data.sessionID = '';
		}
		
		if((input.sessionIDr != '')&&(input.sessionIDr)){
			
			removeSession(input.sessionIDr,gs.getUserID());
			data.attendingSessions = ses.getAttendance();
	    data.result = JSON.stringify(data.attendingSessions);
			input.sessionIDr = '';
			data.sessionIDr = '';
		}
	
	}
	
	
	
	

})();


function addSession(session,user){
	var as = new GlideRecord('x_sthc_swug_19_attending_sessions')
	as.initialize();
	as.session = session;
	as.user = user;
	as.insert();
	gs.addInfoMessage("Session has been added to your calendar")
}

function removeSession(session,user){

	var as = new GlideRecord('x_sthc_swug_19_attending_sessions')
	as.addQuery('user.sys_id',user);
	as.addQuery('session.sys_id',session);
	as.query();
	while(as.next()){
		as.deleteRecord();
		gs.addInfoMessage("Session has been removed from your calendar")
	}
	
	
}]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>LGOMEZ</sys_created_by>
        <sys_created_on>2018-05-04 02:01:45</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>21a08a6adbbddf0096b17d8bbf9619d1</sys_id>
        <sys_mod_count>718</sys_mod_count>
        <sys_name>SWUG Sessions</sys_name>
        <sys_package display_value="SWUG 19" source="x_sthc_swug_19">89eb904ddb71138040f8fcfa0c961950</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="SWUG 19">89eb904ddb71138040f8fcfa0c961950</sys_scope>
        <sys_update_name>sp_widget_21a08a6adbbddf0096b17d8bbf9619d1</sys_update_name>
        <sys_updated_by>LGOMEZ</sys_updated_by>
        <sys_updated_on>2018-06-05 23:08:31</sys_updated_on>
        <template><![CDATA[<div class="global">
  

  

    

<div class="accent-bar-container fixed">
  <div class="global__accent-bar">
      <span class="magenta"></span>
      <span class="green"></span>
      <span class="purple"></span>
      <span class="yellow"></span>
      <span class="blue"></span>
  </div>
  <div class="global__accent-bar">
      <span class="magenta"></span>
      <span class="green"></span>
      <span class="purple"></span>
      <span class="yellow"></span>
      <span class="blue"></span>
  </div>

  </div>


  
<div id="leftNavigation" class="nav__container">
  <a href="#" target="_blank"><img class="logo" src="image/hh_logo.png"></a>
 
<h3>
  <div class="date">
      <p>
        --------------------------------------
   <br />
        March 29th • Scottsdale, AZ </p>
       </div>
  </h3>
 
         <div class="nav__menu-container">
    
            <div class="nav__menu-item">
                <a class="nav__menu-link--undecorated" id="click" href="/swug19">Why Attend</a>
            </div>
          
           <div class="nav__menu-item">
                <a class="nav__menu-link--undecorated" id="click" href="/swug19?id=swug19_location">Location</a>
            </div>
    
        
            <div class="nav__menu-item">
                <a class="nav__menu-link--undecorated" href="/swug19?id=swug_sessions">Sessions</a>
	          </div>
	            
            <div class="nav__menu-item">
                <a class="nav__menu-link--undecorated" href="/sponsors.html">Sponsors</a>
            </div>
          
          <div class="nav__menu-item">
                <a class="nav__menu-link--undecorated"  href="/swug19?id=swug_presentations">Call for presentations</a>
            </div>
          
            
            
                  <item ng-if="data.is_logged_in == false" class="nav__menu-item">
               <div class="nav__menu-item">
                 <a class="nav__menu-link--undecorated" href="/swug19?id=swug_registration">Registration</a><br />
                    </div>
          </item>
          
          <item ng-if="data.is_logged_in">
            <div class="nav__menu-item"><a class="nav__menu-link--undecorated" href="/swug19?id=swug_myschedule">My Schedule</a><br /></div>
            <div class="nav__menu-item hand"><a class="nav__menu-link--undecorated" ng-click="c.logout()">${Logout}</a></div>
          </item>
                
    
      </div>
  </div>
  
     <!-- Login -->
    <div class="login" ng-if="!data.is_logged_in">
      
   
    <div >
  <form ng-if="!c.externalLoginMode" class="form-signin" ng-submit="c.login(c.username, c.password)" method="post">
		<div ng-class="{'panel panel-default': c.options.show_panel}">
			<div ng-if="c.options.show_panel" class="panel-heading">	      
				<h3 class="panel-title">${Login}</h3>
			</div>

			<div ng-class="{'panel-body': c.options.show_panel}">

				<div class="list-group list-group-sm">
					<div class="list-group-item">
            <label for="username" class="sr-only">{{::data.usernameMsg}}</label>
            <input id="username" name="username" autocapitalize="off" ng-keypress="c.message = ''" ng-click="c.message = ''" class="form-control no-border" type="text" placeholder='{{::data.usernameMsg}}' autofocus="true" ng-model="c.username"/>
					</div>
					<div class="list-group-item">
            <label for="password" class="sr-only">{{::data.passwordMsg}}</label>
            <input id="password" name="password" ng-keypress="c.message = ''" ng-click="c.message = ''" class="form-control no-border" type="password" placeholder='{{::data.passwordMsg}}' ng-model="c.password"/>
					</div>
				</div>

				<div ng-if="c.message" class="alert alert-danger" role="alert">{{c.message}}</div>
				<div ng-if="c.success" class="alert alert-success" role="alert">{{c.success}}</div>

				<!--<div ng-if="!c.data.forgetMe" class="checkbox">
          <label>
            <input name="c.remember_me" ng-model="c.remember_me" checked="checked" id="remember_me" type="checkbox" class="checkbox" value="true"/> ${Remember me}
					</label>
				</div>
-->
        <div>
          <a href="#"> forgot my password</a>
        </div>
        <button name="login" type="submit" class="btn btn-lg btn-primary btn-block">
          ${Login}
        </button>

        <a ng-if="data.multisso_enabled"
           class="set-login-type-link"
           href="javascript:void(0)"
           ng-click="c.setExternalLogin(true)">${Use external login}</a>
			</div>
		</div>
	</form>
	<form ng-if="c.externalLoginMode" class="form-signin" ng-submit="c.externalLogin()" method="post">
		<div ng-class="{'panel panel-default': c.options.show_panel}">
			<div ng-if="c.options.show_panel" class="panel-heading">
				<h3 class="panel-title">${External Login}</h3>
			</div>

			<div ng-class="{'panel-body': c.options.show_panel}">
				<div class="list-group list-group-sm">
					<div class="list-group-item">
            <label for="username" class="sr-only">${User ID}</label>
            <input id="username" name="username" ng-click="message = ''" class="form-control no-border" type="text" placeholder='${User ID}' autofocus="true" ng-model="c.username"/>
					</div>
				</div>

        <button name="login" type="submit" class="btn btn-lg btn-primary btn-block">
          ${Submit}
        </button>

        <a href="javascript:void(0)"
           class="set-login-type-link"
           ng-click="c.setExternalLogin(false)">${Use internal login}</a>
			</div>
		</div>
	</form>
</div>
     </div>
    <!-- End Login -->
  
  


<div class="mainContainer"> 

<div class="wrapper">
  <div class="header">
    <h1>
     <b> Adgenda & Sessions</b>
    </h1>
  </div>
  
  <div id="adgenda">
<h1>Friday, Marth 29th 2019</h1>
    <table>
      <tr>
        <th></th>
        <th></th>
      </tr>
      <tr>
      <td> 7:00am - 8:00am  </td>
      <td> Breakfast </td>
      </tr>
      <tr>
      <td>9:00am - 12:00pm</td>
      <td>Break-Out Sessions</td>
      </tr>
      <tr>
      <td>12:00pm - 1:00pm</td>
      <td>Lunch</td>
      </tr>
       <tr>
      <td>1:00pm - 3:00pm</td>
      <td>Break-Out Sessions</td>
      </tr>
          <tr>
      <td>3:00pm - 5:00pm</td>
      <td>Final Words</td>
      </tr>
    </table>
    
  </div>
  
  




  </div>
 


  <div class="sessionContainer" ng-repeat="course in data.sessions">
   
  
  <div class="topic">          
{{course.topic}}
     </div>
<div class="hideMobile">
  <div class="description">
    {{course.description}}
  </div> </div>
     
  <div>
    <h4><b>Time: </b>{{course.time}} - {{course.end_time}}</h4>
  </div>
  
 
   <div id="overlay" ng-click="c.off()">
  <div id="text">
    <h3>{{c.data.topic}}</h3>
    <h5>{{c.data.description}}</h5>
    <h4><b>Presenting Hospital: </b>{{c.data.hospital}}</h4>
    <h4><b>Speaker: </b>{{c.data.speaker}}</h4>
    <h4><b>Time: </b>{{c.data.time}} - {{c.data.end_time}}</h4>
     <h4><b>Location: </b>{{c.data.location}}</h4>
     </div>
</div>
  <a ng-click="c.on(course.description,course.topic,course.hospital,course.speaker,course.time,course.end_time,course.room)">Read More Detail</a>

    <span class="add">
      
    
  <links  ng-if="data.is_logged_in">
    
   <a ng-if="attendingThisClass(course.course_id) == true" ng-click="c.addSession(course.course_id)">Add to my schedule <img src="emptystar.png" width="30" height="30"></a>
   <a ng-if="attendingThisClass(course.course_id) == false"  ng-click="c.removeSession(course.course_id)">Remove from my schedule <img src="star.png" width="30" height="30"></a>
  </links>
  
  <div ng-if="data.is_logged_in == false">
   <a>Log in to add this session</a>
  </div>
    </span>
        
      </div>				
   
 




  </div> </div>


 ]]></template>
    </sp_widget>
</record_update>
