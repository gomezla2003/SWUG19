<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope, $http, $window, $location, glideUserSession, glideSystemProperties, spUtil) {
  /* widget controller */
	  var c = this;

	c.submit = function(){
		c.server.update();
		setTimeout(function(){
			if(c.data.found)
			swal("Password has been reset", "Please check your email for your new temporary password", "success");
		
			else
				swal("Email not found", "This email has been yet been registered, please register now","error");
		}, 3000);
		c.data.found = '';
		
		
	
	}

  
		c.login = function(username, password) {
			
		var url = spUtil.getURL({sysparm_type: 'view_form.login'});
		
		// If the page isn't public then the id in the
		// url won't match the rendered page id.
		var pageId = $location.search().id || $scope.page.id;
		var isLoginPage = $scope.portal.login_page_dv == pageId;

		return $http({
			method: 'post',
			url: url,
			data: $.param({
				'sysparm_type': 'login',
				'ni.nolog.user_password': true,
				'remember_me': !!c.remember_me ? true : false,
				'user_name': username,
				'user_password': password,
				'get_redirect_url': true,
				'sysparm_goto_url': isLoginPage ? null : $location.url()
			}),
			headers: {
				'Content-Type': 'application/x-www-form-urlencoded'
			}
		}).then(function(response) {
			if (!response.data) {
				c.message = $scope.data.errorMsg;
				return;
			}

			if (response.data.status == 'success') {
				c.success = response.data.message;
				//$window.location = response.data.redirect_url;
				$window.location = '/swug19';
			} else {
				// wrong username or password
				c.message = response.data.message;
				c.password = "";
				c.username = "";
				angular.element("#username").focus();
			}

		}, function errorCallback(response) {
			// error
			c.message = $scope.data.errorMsg;
		});
	};

	c.externalLogin = function() {
		c.server.get({
			action: "set_sso_destination",
			pageURI: c.data.pageURI
		}).then(function() {
			glideSystemProperties.set("glide.authenticate.multisso.enabled", true);

			glideUserSession.getSsoRedirectUrlForUsername(c.username)
				.then(function(url) {
					$window.location = url;
				}, function(err) {
					spUtil.addErrorMessage($scope.data.errorMsg2);
				});
		});
	}

	c.setExternalLogin = function(newVal) {
		c.externalLoginMode = newVal;
	}
	
	
	$("#click").click(function() {
    $('html, body').animate({
        scrollTop: $("#adgenda").offset().top
    }, 2000);
});
	
				 
	}
	
	
]]></client_script>
        <controller_as>c</controller_as>
        <css>#leftNavigation{
  //position: fixed;
}


// COLOR BAR
.global__accent-bar{
  position: fixed;
  display:-webkit-box;display:-ms-flexbox;
  display:flex;
  -webkit-box-orient:horizontal;
  -webkit-box-direction:normal;
  -ms-flex-direction:row;
  flex-direction:row;
  -ms-flex-wrap:nowrap;
  flex-wrap:nowrap;
  -webkit-box-align:start;
  -ms-flex-align:start;
  align-items:flex-start;
  overflow:hidden;
  left:0;
  width:100%;position:
    absolute
}
.global__accent-bar span{
  display:block;
  width:20%;
  height:.5rem
}
@media (min-width:768px){
  .global__accent-bar span{
    height:.9rem}}
.global__accent-bar .magenta{
  background-color:#e62565
}
.global__accent-bar .green{background-color:#8ad000}
.global__accent-bar .purple{background-color:#9a29af}
.global__accent-bar .blue{background-color:#03a9f3}
.global__accent-bar .yellow{background-color:#ffeb3c}
.global__accent-bar:first-child{display:none}
@media (min-width:1366px){
  .global__accent-bar:first-child{
    display:-webkit-box;
    display:-ms-flexbox;
    display:flex;
    left:-60%}}

//Logo
.logo{
  float: left;
  width:300px;
  height:80px;
  position:relative;
  margin-top:30px;
  margin-bottom 40px;

}


//Navigation menu
.date{
  text-align: center;
}


.nav__container{
  position:relative;
  top:40px;
  left:0;
  width:300px;
  height: 450px;
  background-color:#fff;
  z-index:20;
  -webkit-box-shadow:0 .5rem 2.5rem .6rem rgba(0,0,0,.25);
  box-shadow:0 .5rem 2.5rem .6rem rgba(0,0,0,.25);
  -webkit-transition:all .25s ease;
  transition:all .25s ease}



.nav__options-container{
  display:block;
  position:relative;
}


.nav__menu-container{
  margin-bottom:5.8rem;
  margin-top:30px;
  padding-left:50px;
  padding-right:50px;
  padding-top:30px;
}


.nav__menu-container .nav__menu-item{
  border-top:.1rem solid #f2f2f2;
  padding:.4rem 0;
  text-transform:uppercase}

.nav__menu-container .nav__menu-link--undecorated{
      color:gray;
  text-decoration:none;
  font-weight:800;
  font-size:1.6rem}

.nav__menu-container .nav__menu-link--undecorated:hover{
  color:#000}

//ATTEND
.wrapper{
  float: right;
  width: 80%;
  //padding-top:30px;
  margin-top: -330px;
}

@media screen and (max-width:1200px)  {
  .wrapper{
    float:none;
    width: 100%;
    margin-top: 10px;
  }}

#header{
  border-bottom: 5px solid #ffb81c;
  background: #72246c;
 text-align: center;
  width:90%;
  margin:auto;
   -webkit-box-shadow:0 .5rem 2.5rem .6rem rgba(0,0,0,.25);
  box-shadow:0 .5rem 2.5rem .6rem rgba(0,0,0,.25);
  -webkit-transition:all .25s ease;
  transition:all .25s ease
}

#header h1{
  color:#ffb81c;
  font-size:36pt;
}



//CONTENT
#content{
  margin-top:30px;
 text-align: center;
     -webkit-box-shadow:0 .5rem 2.5rem .6rem rgba(0,0,0,.25);
  box-shadow:0 .5rem 2.5rem .6rem rgba(0,0,0,.25);
  -webkit-transition:all .25s ease;
  transition:all .25s ease
}

.location{
  background-color:#ffb81c;
  margin-top:30px;
  -webkit-box-shadow:0 .5rem 2.5rem .6rem rgba(0,0,0,.25);
  box-shadow:0 .5rem 2.5rem .6rem rgba(0,0,0,.25);
  -webkit-transition:all .25s ease;
  transition:all .25s ease
}
.text{
  padding:20px;
  color:#72246c;
}
.text h1{
  border-bottom: 5px solid red;
}


//LOGIN
.set-login-type-link {
  margin-top: 10px;
  display: block;
 
}

.form-control,
label[for="username"],
label[for="password"] {
	color: black;
}

.btn {
	font-weight: 600;
  font-size: 2.0rem;
  background-color: #176AAD;
  border-color: #0B4E85;
}
.login{
  //position: relative;
  display:block;
  width: 300px;
  float: left;
  margin-top: 60px;
}

.form{
  float:right;
  width: 50%;
  margin-top:-400px;
  margin-right:200px;
}
@media (max-width:1000px){
  .form{
    margin-top:50px;
    float:none;
    margin:auto;
    width: 95%
  }
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>swug_password_reset</id>
        <internal>false</internal>
        <link/>
        <name>SWUG password reset</name>
        <option_schema/>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
	
data.is_logged_in = gs.getSession().isLoggedIn();
	
	//We don't want to set a starting page until we've begun the login process.
data.errorMsg = gs.getMessage("There was an error processing your request");
data.errorMsg2 = gs.getMessage("An error has occurred - please contact your system administrator");
data.passwordMsg = gs.getMessage("Password");
data.usernameMsg = gs.getMessage("E-Mail");

//var util = new GlideSPUtil();

if (input && input.action === "set_sso_destination") {
	var gs_nav_to = gs.getSession().getProperty("nav_to");
	gs.getSession().putProperty("nav_to", null);

	if (!gs.getSession().getProperty("starting_page"))
		gs.getSession().putProperty("starting_page", gs_nav_to);

	return;
}
	//data.forgetMe = GlideProperties.getBoolean("glide.ui.forgetme");
	//data.forgetMeDefault = GlideProperties.getBoolean('glide.ui.remember.me.default', true);
	data.is_logged_in = gs.getSession().isLoggedIn();
	var bypass_sso = options.bypass_sso == "true";
	//data.multisso_enabled = !bypass_sso && GlideProperties.getBoolean("glide.authenticate.multisso.enabled");			
	//data.default_idp = GlideProperties.get("glide.authenticate.sso.redirect.idp");
	//data.pageURI = util.getPageUri();
	
if(input){
	
	checkUser();
	
}
	
	
	
	

})();

function checkUser(){
	var gr = new GlideRecord("x_sthc_swug_19_swug_users_extended");
	gr.addQuery('email',input.email);
	gr.query();
	while(gr.next()){
		data.found = true;
	gr.user_password.setDisplayValue("SWUG19");
  gr.password_needs_reset = 'true';
	gr.update();
	}

}
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>LGOMEZ</sys_created_by>
        <sys_created_on>2019-02-05 20:57:03</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>d4e46804db27ab4040f8fcfa0c9619d0</sys_id>
        <sys_mod_count>17</sys_mod_count>
        <sys_name>SWUG password reset</sys_name>
        <sys_package display_value="SWUG 19" source="x_sthc_swug_19">89eb904ddb71138040f8fcfa0c961950</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="SWUG 19">89eb904ddb71138040f8fcfa0c961950</sys_scope>
        <sys_update_name>sp_widget_d4e46804db27ab4040f8fcfa0c9619d0</sys_update_name>
        <sys_updated_by>LGOMEZ</sys_updated_by>
        <sys_updated_on>2019-02-05 21:35:12</sys_updated_on>
        <template><![CDATA[
  

    

<div class="accent-bar-container fixed">
  <div class="global__accent-bar">
      <span class="magenta"></span>
      <span class="green"></span>
      <span class="purple"></span>
      <span class="yellow"></span>
      <span class="blue"></span>
  </div>
  <div class="global__accent-bar">
      <span class="magenta"></span>
      <span class="green"></span>
      <span class="purple"></span>
      <span class="yellow"></span>
      <span class="blue"></span>
  </div>

  </div>


  
<div id="leftNavigation" class="nav__container">
  <a href="#" target="_blank"><img class="logo" src="image/hh_logo.png"></a>
 
<h3>
  <div class="date">
      <p>
        --------------------------------------
   <br />
        March 29th • Scottsdale, AZ </p>
       </div>
  </h3>
 
        <div class="nav__menu-container">
    
            <div class="nav__menu-item">
                <a class="nav__menu-link--undecorated" id="click" href="/swug19">Why Attend</a>
            </div>
          
           <div class="nav__menu-item">
                <a class="nav__menu-link--undecorated" id="click" href="/swug19?id=swug19_location">Location</a>
            </div>
          
          <div class="nav__menu-item">
                <a class="nav__menu-link--undecorated" id="click" href="/swug19?id=swug_vendor">Vendor Registration</a>
            </div>
    
        
            <div class="nav__menu-item">
                <a class="nav__menu-link--undecorated" href="/swug19?id=swug_sessions">Sessions</a>
	          </div>
	            <!--
            <div class="nav__menu-item">
                <a class="nav__menu-link--undecorated" href="/sponsors.html">Sponsors</a>
            </div>
          
          <div class="nav__menu-item">
            <a class="nav__menu-link--undecorated" href="#">FAQ</a>
            </div>-->
          <!--
          <div class="nav__menu-item">
                <a class="nav__menu-link--undecorated"  href="/swug19?id=swug_presentations">Call for presentations</a>
            </div>-->
          
            
            
                  <item ng-if="data.is_logged_in == false" class="nav__menu-item">
               <div class="nav__menu-item">
                 <a class="nav__menu-link--undecorated" href="/swug19?id=swug_registration">Registration</a><br />
                    </div>
          </item>
          
          <item ng-if="data.is_logged_in">
            <div class="nav__menu-item"><a class="nav__menu-link--undecorated" href="/swug19?id=swug_myschedule">My Schedule</a><br /></div>
            <div class="nav__menu-item hand"><a class="nav__menu-link--undecorated" href="{{::portal.logoutUrl}}">${Logout}</a></div>
          </item>
                
    
      </div>
  </div>
    
     Login 
    <div class="login" ng-if="!data.is_logged_in">
      
   
    <div >
  <form ng-if="!c.externalLoginMode" class="form-signin" ng-submit="c.login(c.username, c.password)" method="post">
		<div ng-class="{'panel panel-default': c.options.show_panel}">
			<div ng-if="c.options.show_panel" class="panel-heading">	      
				<h3 class="panel-title">${Login}</h3>
			</div>

			<div ng-class="{'panel-body': c.options.show_panel}">

				<div class="list-group list-group-sm">
					<div class="list-group-item">
            <label for="username" class="sr-only">{{::data.usernameMsg}}</label>
            <input id="username" name="username" autocapitalize="off" ng-keypress="c.message = ''" ng-click="c.message = ''" class="form-control no-border" type="text" placeholder='{{::data.usernameMsg}}' autofocus="true" ng-model="c.username"/>
					</div>
					<div class="list-group-item">
            <label for="password" class="sr-only">{{::data.passwordMsg}}</label>
            <input id="password" name="password" ng-keypress="c.message = ''" ng-click="c.message = ''" class="form-control no-border" type="password" placeholder='{{::data.passwordMsg}}' ng-model="c.password"/>
					</div>
				</div>

				<div ng-if="c.message" class="alert alert-danger" role="alert">{{c.message}}</div>
				<div ng-if="c.success" class="alert alert-success" role="alert">{{c.success}}</div>

        <div>
          <a href="/swug19?id=swug_reset_password"> forgot my password</a>
        </div>
        <button name="login" type="submit" class="btn btn-lg btn-primary btn-block">
          ${Login}
        </button>

        <a ng-if="data.multisso_enabled"
           class="set-login-type-link"
           href="javascript:void(0)"
           ng-click="c.setExternalLogin(true)">${Use external login}</a>
			</div>
		</div>
	</form>
	<form ng-if="c.externalLoginMode" class="form-signin" ng-submit="c.externalLogin()" method="post">
		<div ng-class="{'panel panel-default': c.options.show_panel}">
			<div ng-if="c.options.show_panel" class="panel-heading">
				<h3 class="panel-title">${External Login}</h3>
			</div>

			<div ng-class="{'panel-body': c.options.show_panel}">
				<div class="list-group list-group-sm">
					<div class="list-group-item">
            <label for="username" class="sr-only">${User ID}</label>
            <input id="username" name="username" ng-click="message = ''" class="form-control no-border" type="text" placeholder='${User ID}' autofocus="true" ng-model="c.username"/>
					</div>
				</div>

        <button name="login" type="submit" class="btn btn-lg btn-primary btn-block">
          ${Submit}
        </button>

        <a href="javascript:void(0)"
           class="set-login-type-link"
           ng-click="c.setExternalLogin(false)">${Use internal login}</a>
			</div>
		</div>
	</form>
</div>
     </div>


    <form class="form-horizontal form">
<fieldset>

<!-- Form Name -->
<legend>
   <h1>
     <br/>
   South West User Group Password Reset
<br/></h1>
 </legend>
  

<!-- Text input-->
<div class="form-group">
  <label class="control-label" for="email">E-mail</label>  
  <input ng-model="data.email" id="email" name="email" type="text" placeholder="Enter your E-mail address" class="form-control input-md">
</div>

</fieldset>
      
      <button class="btn-submit" ng-click="c.submit()">
        Submit
      </button><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
</form>

    
    




 ]]></template>
    </sp_widget>
</record_update>
